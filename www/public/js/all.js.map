{"version":3,"sources":["charts.js","utilities.js"],"names":[],"mappingszJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["/* Author: Matthias Seghers\n *\n * Created: 30/03/2016\n * Modified: 01/08/2016\n *\n * @TODO: More colors\n * @TODO: Pie Chart\n *\n * Allows easy access to dynamically create graphs with the Chart.js framework\n * Requirements: loDash, jQuery, ChartJS */\n\n$(document).ready(function () {\n\n    if (typeof chartData !== 'undefined') {\n        //Structure 2\n        var dataPie = [\n            {\n                value: 200,\n                color: \"#F7464A\",\n                highlight: \"#FF5A5E\",\n                label: \"Red\"\n            },\n            {\n                value: 50,\n                color: \"#46BFBD\",\n                highlight: \"#5AD3D1\",\n                label: \"Green\"\n            },\n            {\n                value: 100,\n                color: \"#FDB45C\",\n                highlight: \"#FFC870\",\n                label: \"Yellow\"\n            },\n            {\n                value: 40,\n                color: \"#949FB1\",\n                highlight: \"#A8B3C5\",\n                label: \"Grey\"\n            },\n            {\n                value: 120,\n                color: \"#4D5360\",\n                highlight: \"#616774\",\n                label: \"Dark Grey\"\n            }\n        ];\n\n        //var labels = [\"Januari\", \"Februari\", \"Maart\", \"April\", \"Mei\", \"Juni\", \"Juli\", \"Augustus\", \"September\", \"Oktober\", \"november\", \"December\"];\n        var labels = [];\n        for (var i = 0; i < chartData.timeStamps.length; i++)\n        {\n            var date = Date.createFromMysql(chartData.timeStamps[i]);\n            labels.push(date.getDate()  + \"-\" + (date.getMonth() + 1)+ \"-\" + date.getFullYear());\n        }\n        console.log(chartData);\n        var datasets = [\n            {\n                label: \"Prijs\",\n                data: chartData.priceHistory,\n            },\n            {\n                label: \"Voorraad\",\n                data: chartData.stockHistory,\n            },\n        ];\n\n        drawGraph('lineChart', \"line\", datasets, labels);\n    }\n});\n\n\nfunction drawGraph(elementID, graphType, dataSets, labels) {\n    var graphTypes = [\"line\", \"bar\", \"radar\"];\n\n\n    if (graphTypes.includes(graphType)) {\n        //RGB\n        var colors = [\n            \"139, 195, 74\",//Light Green\n            \"33, 150, 243\", //Blue\n            \"244, 67, 54\", //Red\n            \"158, 158, 158\",//Grey\n        ];\n\n\n        if (labels.constructor !== Array) {\n            console.log(\"Labels are not in the right format. Needs to be an array!\");\n            return;\n        }\n        else {\n            if(labels.length == 0)\n            {\n                var nDataSets = dataSets.length;\n                var nData = 0;\n                for(var x = 0; x < nDataSets; x++)\n                {\n                    if(dataSets[x].data.length > nData)\n                    {\n                        nData = dataSets[x].data.length;\n                    };\n                }\n                for (var y = 0; y < nData; y++)\n                {\n                    labels.push(y);\n                }\n\n            }\n            //Setting Data\n            var data = {\n                labels: labels,\n                datasets: dataSets,\n            };\n\n            //Setting colors\n            for (var i = 0; i < data.datasets.length; i++) {\n                data.datasets[i].fillColor = \"rgba(\" + colors[i] + \",0.2)\";\n                data.datasets[i].strokeColor = \"rgba(\" + colors[i] + \",1)\";\n                data.datasets[i].pointColor = \"rgba(\" + colors[i] + \",1)\";\n                data.datasets[i].pointStrokeColor = \"#fff\";\n                data.datasets[i].pointHighlightFill = \"#fff\";\n                data.datasets[i].pointHighlightStroke = \"rgba(\" + colors[i] + \",1)\";\n\n            }\n\n            //Getting canvas\n            var ctx = document.getElementById(elementID).getContext(\"2d\");\n\n\n            //Drawing on the canvas\n            var myLineChart = new Chart(ctx).Line(data, {\n                responsive: true,\n                animation: true,\n                multiTooltipTemplate: \"<%= datasetLabel %> - <%= value %>\"\n            });\n            console.log(data);\n        }\n    }\n}\n\nDate.createFromMysql = function(mysql_string)\n{\n    var t, result = null;\n\n    if( typeof mysql_string === 'string' )\n    {\n        t = mysql_string.split(/[- :]/);\n\n        //when t[3], t[4] and t[5] are missing they defaults to zero\n        result = new Date(t[0], t[1] - 1, t[2], t[3] || 0, t[4] || 0, t[5] || 0);\n    }\n\n    return result;\n}","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Author: Matthias Seghers                                        *\n *                                                                 *\n * Created: 02/05/2016                                             *\n * Modified: 23/07/2016                                            *\n *                                                                 *\n * REQUIRES BOOTBOX AND JQUERY TO WORK                             *\n *                                                                 *\n * Various javascript functions to enhance workings of the site.   *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/** * * * * * * * *\n * Event handlers *\n * * * * * * * * **/\n\n$('a.SortFilter').click(function () {\n    var newQuery = $(this).attr('href');\n    window.location.href = generateQuerystring(newQuery);\n    return false;\n});\n$('a.clearfilter').click(function () {\n    clearFilter();\n\n    return false;\n});\n\n$('form.delete').submit(function (e) {\n    var currentForm = this;\n    e.preventDefault();\n    bootbox.confirm(\"Ben je zeker dat je dit item wil verwijderen?\", function (result) {\n        if (result) {\n            currentForm.submit();\n        }\n    });\n});\n\n/** * * * * * *\n * Functions  *\n * * * * * * **/\n\n/**\n * Generate a Querystring given a new query.\n * @param {SQL} newQuery\n * @export\n */\nfunction generateQuerystring(query) {\n    var url = window.location.href;\n\n    if (url.indexOf('?') == -1) {\n        //add new querystring\n        url += \"?\" + query;\n    } else {\n        //querystring already there\n        var param = query.split('=')[0];\n\n        //RegExp aanmaken\n        var reParam = new RegExp(param + \"=\", \"g\");\n\n        if (url.search(reParam) == -1) {\n            url += \"&\" + query;\n        } else {\n            //param already in querystring, change value instead of add.\n            //var reQuery = new RegExp(\"thirdparam=(.*?)(&|$)\");\n            var reQuery = new RegExp(param + \"=(.*?)(&|$)\");\n            var reLast = new RegExp(param + \"=(.*?)&\");\n\n            //check if query will have last position (no need for & when last!!)\n            if (reLast.exec(url)) {\n                url = url.replace(reQuery, query + \"&\");\n            } else {\n                url = url.replace(reQuery, query);\n            }\n            ;\n        }\n    }\n\n    return url;\n}\n\nfunction clearFilter() {\n    var curUrl = window.location.href;\n    var querystring = curUrl.substr(curUrl.indexOf('?') + 1);\n    var queries = querystring.split('&');\n    var newUrl;\n\n    if (curUrl.indexOf(\"filter=\") != -1) {\n        for (var i = 0; i < queries.length; i++) {\n            if (queries[i].split('=')[0] == \"filter\") {\n\n                if (curUrl.indexOf('&filter') != -1) {\n                    newUrl = curUrl.replace('&' + queries[i], '');\n                }\n                else if (curUrl.indexOf('?filter') != -1) {\n                    if (curUrl.indexOf('?' + queries[i] + '&') != -1) {\n                        newUrl = curUrl.replace('?' + queries[i] + '&', '?');\n                    }\n                    else {\n                        newUrl = curUrl.replace('?' + queries[i], '');\n                    }\n                }\n            }\n        }\n        window.location.href = newUrl;\n    }\n    else {\n        window.location.href = curUrl;\n    }\n}\n"],"sourceRoot":"/source/"}